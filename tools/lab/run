#!/bin/bash

# no argument required of config for container
IN_CONTAINER_CMD=1
source /tools/docker/config >/dev/null

do_unlock

get_var HOST_NAME localhost
get_var UNIX_USER ubuntu
get_var UNIX_IDENTIFY 1
get_var SUDO_IDENTIFY 0
get_var UNIX_UID 1000
set_var UNIX_UID

# Update PS1 of the TERM
bash -c "sed -i -e 's%PS1=.*$%PS1=\"$UNIX_USER@$IMAGE\$ \"%g' /etc/skel/.bashrc"

# create a ubuntu user

HOME=/home/$UNIX_USER/
DESKTOP=$HOME/Desktop/

[ $SUDO_IDENTIFY -eq 1 ] && UNIX_USER_GROUPS="--groups adm,sudo"
[ $SUDO_IDENTIFY -eq 0 ] && UNIX_USER_GROUPS=""
id -u $UNIX_USER &>/dev/null \
    || useradd --uid $UNIX_UID --create-home --shell /bin/bash --user-group $UNIX_USER_GROUPS $UNIX_USER

# Install more system configuration files
[ ! -d $DESKTOP ] && mkdir $DESKTOP

for f in `find $CONFIG_SYSTEM_DIR -type f | sed -e "s%$CONFIG_SYSTEM_DIR%%g"`
do
    d=`dirname $f`
    [ ! -d $d ] && mkdir -p $d
    cp $CONFIG_SYSTEM_DIR/$f $f
done

SYSTEM_SUDOERS_USER=`find $CONFIG_SYSTEM_DIR -type f -name "$UNIX_USER" | sed -e "s%$CONFIG_SYSTEM_DIR%%g" | grep sudoers.d`

[ -n "$SYSTEM_SUDOERS_USER" -a -f "$SYSTEM_SUDOERS_USER" ] && chmod 440 $SYSTEM_SUDOERS_USER
chown $UNIX_USER:$UNIX_USER -R $HOME/

DESKTOP_WALLPAPER_CONF=/usr/share/desktop/desktop-items-0.conf
[ -f $DESKTOP_WALLPAPER_CONF ] \
  && sudo -u $UNIX_USER -i bash -c "mkdir -p $HOME/.config/pcmanfm/LXDE/ \
    && mkdir -p /home/$UNIX_USER/.config/lxpanel/LXDE/panels \
    && cp $DESKTOP_WALLPAPER_CONF $HOME/.config/pcmanfm/LXDE/ \
    && cp /usr/share/desktop/panel $HOME/.config/lxpanel/LXDE/panels/panel"

# Create password, ENV > CONF > PWGEN

[ -z "$UNIX_PWD" ] && get_var UNIX_PWD
[ -z "$VNC_PWD" ] && get_var VNC_PWD

[ -z "$UNIX_PWD" ] && UNIX_PWD=`pwgen -c -n -s -1 15`
[ -z "$VNC_PWD" ] && VNC_PWD=`pwgen -c -n -s -1 15`

[ -z "$UNIX_PWD" ] && set_var UNIX_PWD
[ -z "$VNC_PWD" ] && set_var VNC_PWD

# Sync UID between host and container
sudo chown $UNIX_USER:$UNIX_USER $LAB_UNIX_PWD $LAB_VNC_PWD $LAB_UNIX_UID
sudo chmod a+w $LAB_UNIX_PWD $LAB_VNC_PWD $LAB_UNIX_UID

do_lock

# Don't touch me: otherwise, need to modify tools/docker/run
echo "User: $UNIX_USER Password: $UNIX_PWD VNC Password: $VNC_PWD"

SYSTEM_SUPERVISORD_CONF=/etc/supervisor/supervisord.conf
# VNC PASS
which x11vnc 2>&1>/dev/null
if [ $? -eq 0 ]; then
    VNC_PWD_FILE=$HOME/.vnc/passwd
    [ ! -d $HOME/.vnc ] && mkdir -p $HOME/.vnc
    x11vnc -storepasswd $VNC_PWD $VNC_PWD_FILE

    # Disable the VNC login password
    get_var VNC_IDENTIFY 1
    [ $VNC_IDENTIFY -eq 0 -a "$HOST_NAME" == "localhost" ] \
        && sed -i -e "s% -rfbauth $VNC_PWD_FILE$%%g" $SYSTEM_SUPERVISORD_CONF
fi

# UNIX PASS
echo "$UNIX_USER:$UNIX_PWD" | chpasswd

# Lock UNIX Password?
[ $UNIX_IDENTIFY -eq 0 ] && passwd -l $UNIX_USER
[ $UNIX_IDENTIFY -eq 1 ] && passwd -u $UNIX_USER

# Run Lab specific tasks
[ -x $LAB_CONTAINER_RUN ] && UNIX_USER=$UNIX_USER $LAB_CONTAINER_RUN

# Launch supervisor tasks

/usr/bin/supervisord -n -c $SYSTEM_SUPERVISORD_CONF

for f in /etc/startup.aux/*.sh
do
    . $f
done
